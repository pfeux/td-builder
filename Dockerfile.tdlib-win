# escape=`

ARG FROM_IMAGE=ghcr.io/pfeux/vstools:latest
FROM ${FROM_IMAGE} AS builder

# Reset the shell.
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Clone the repositories
WORKDIR /app
RUN git clone https://github.com/tdlib/td.git; `
    cd td; `
    git clone https://github.com/Microsoft/vcpkg.git

# Install vcpkg packages for x64 & x86
WORKDIR /app/td/vcpkg
RUN Start-Process -Wait -NoNewWindow -PassThru -FilePath C:\app\td\vcpkg\bootstrap-vcpkg.bat; `
    Start-Process -Wait -NoNewWindow -PassThru -FilePath C:\app\td\vcpkg\vcpkg.exe -ArgumentList 'install', 'gperf:x64-windows', 'openssl:x64-windows', 'zlib:x64-windows', 'gperf:x86-windows', 'openssl:x86-windows', 'zlib:x86-windows';

# Build tdlib
WORKDIR /app/td
RUN foreach ($config in ('Release', 'Debug')) { `
    foreach ($arch in ('x64', 'Win32')) { `
        Remove-Item -LiteralPath "build" -Force -Recurse -ErrorAction SilentlyContinue; `
        New-Item -ItemType Directory -Path "build"; `
        cd build; `
        cmake -A $arch -DCMAKE_INSTALL_PREFIX:PATH=../tdlib/$arch/$config -DTD_ENABLE_DOTNET=ON -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../vcpkg/scripts/buildsystems/vcpkg.cmake ..; `
        cmake --build . --target install --config $config; `
        cd ..; `
    } `
}

# Display the contents of the tdlib directory
RUN dir tdlib

# Copy all built tdlibs
FROM mcr.microsoft.com/windows/nanoserver:ltsc2022
WORKDIR /app
COPY --from=builder /app/td/tdlib ./tdlib